generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  email    String @unique
  password String

  name       String @unique
  avatarPath String @default("https://miro.medium.com/v2/resize:fit:2400/1*ijJZdYAGuP0me0QqQF1Zxg.png") @map("avatar_path")

  phone String @default("")

  orders    Order[]
  favorites Product[]

  @@map("user")
}

model Product {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name        String 
  slug        String 
  description String
  price       Int
  image       String

  user   User?   @relation(fields: [userId], references: [id])
  userId String? @map("user_id")

  category   Category? @relation(fields: [categoryId], references: [id])
  categoryId String?   @map("category_id")

  orderItems OrderItem[]

  @@map("product")
}

model Category {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name String 
  slug String 

  image String?

  products Product[]

  @@map("category")
}


model Order {
  id        String      @id @default(cuid())
  createdAt DateTime    @default(now()) @map("created_at")
  updatedAt DateTime    @updatedAt @map("updated_at")
  status    OrderStatus @default(PENDING)
  reference String      @unique
 total Int @default(0)

  user      User?       @relation(fields: [userId], references: [id])
  userId    String?

  paymentId   String? 
  paymentData Json? 

  customerName     String?
  customerEmail    String?
  customerPhone    String?
  shippingAddress  String?

  items     OrderItem[] 

  @@map("order")
}

model OrderItem {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  quantity Int
  price    Int

  order    Order?   @relation(fields: [orderId], references: [id])
  orderId  String?  @map("order_id")

  product    Product?   @relation(fields: [productId], references: [id])
  productId  String?  @map("product_id") 

  @@map("order_item")
}

enum OrderStatus {
  PENDING
  PROCESSING
  COMPLETED
  CANCELLED
  REFUNDED
}
